{"version":3,"file":"ptoast.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,mBCRT,ICAWC,EAQAC,EAUAC,EAOAC,EDzBPC,EAAsB,CEA1BA,EAAwB,CAACX,EAASY,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAEd,EAASa,IAC5EE,OAAOC,eAAehB,EAASa,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBX,IACH,oBAAXwB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAehB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAehB,EAAS,aAAc,CAAE0B,OAAO,GAAO,G,kCHH9D,SAAWnB,GACPA,EAAmB,QAAI,UACvBA,EAAiB,MAAI,QACrBA,EAAmB,QAAI,UACvBA,EAAgB,KAAI,OACpBA,EAAmB,QAAI,SAC1B,CAND,CAMGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAA0B,UAAI,YAC9BA,EAAwB,QAAI,UAC5BA,EAA0B,UAAI,YAC9BA,EAA2B,WAAI,aAC/BA,EAA0B,UAAI,YAC9BA,EAAuB,OAAI,QAE9B,CARD,CAQGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAwB,SAAI,YAC5BA,EAAuB,QAAI,WAC3BA,EAA2B,YAAI,eAC/BA,EAA0B,WAAI,aACjC,CALD,CAKGA,IAAkBA,EAAgB,CAAC,IAEtC,SAAWC,GACPA,EAAe,QAAI,qZACnBA,EAAY,KAAI,oVAChBA,EAAe,QAAI,oXACnBA,EAAa,MAAI,qQACpB,CALD,CAKGA,IAAUA,EAAQ,CAAC,II2ItB,YA1KA,MACIiB,SACAC,eAAiB,CACbC,SAAUpB,EAAcqB,SACxBC,UAAWvB,EAAewB,UAC1BC,SAAU,IACVC,OAAO,EACPC,UAAU,GAEd,WAAAC,GACIC,KAAKV,SAAW,IAAKU,KAAKT,kBAAmBS,KAAKC,QACtD,CACA,WAAIA,GACA,OAAOD,KAAKV,QAChB,CACA,WAAIW,CAAQZ,GACRW,KAAKV,SAAW,IAAKU,KAAKT,kBAAmBF,EACjD,CACA,WAAAa,CAAYD,GAER,OADAD,KAAKC,QAAUA,EACRD,IACX,CACA,IAAAG,EAAK,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAOpC,EAAUqC,UACpC,MAAM,aAAEC,EAAY,mBAAEC,GAAuBT,KAAKU,2BAA2BJ,GACvEK,EAAeX,KAAKY,qBAAqBJ,EAAcF,GACvDO,EAAcC,SAASC,cAAc,OAC3CF,EAAYG,UAAUC,OAAO,yCAAyCC,MAAM,MAC5EP,EAAaQ,YAAYN,GACzB,MAAMO,EAAiBN,SAASC,cAAc,OAC9CK,EAAeJ,UAAUC,OAAO,4BAA4BC,MAAM,MAClEP,EAAaQ,YAAYC,GACrBd,IACAO,EAAYQ,UAAYrB,KAAKsB,YAAYhB,IAE7C,MAAMiB,EAAeT,SAASC,cAAc,OAC5CQ,EAAaP,UAAUC,IAAI,iBAC3BM,EAAaC,YAAcpB,GAAS,GACpCgB,EAAeD,YAAYI,GAC3B,MAAME,EAAiBX,SAASC,cAAc,OAC9CU,EAAeT,UAAUC,OAAO,uBAAuBC,MAAM,MAC7DO,EAAeD,YAAcnB,GAAW,GACxCe,EAAeD,YAAYM,GAC3B,IAAIC,EAAsB,KAC1B,GAAI1B,KAAKC,QAAQH,SAAU,CACvB,MAAM6B,EAAqBb,SAASC,cAAc,OAClDY,EAAmBX,UAAUC,OAAO,kDAAkDC,MAAM,KAAMT,GAClGE,EAAaQ,YAAYQ,GAEzB,IAAIC,EAAmB5B,KAAKC,QAAQL,SACpC8B,EAAsBG,aAAY,KAC9BD,GAAsC,IACtC,MAAME,EAAoB,IAAMF,EAAoB5B,KAAKC,QAAQL,SACjE+B,EAAmBI,MAAMC,MAAQF,EAAmB,GAAG,GACxD,IACP,CACA,GAAI9B,KAAKC,QAAQJ,MAAO,CACpB,MAAMoC,EAAYnB,SAASC,cAAc,QACzCkB,EAAUjB,UAAUC,OAAO,qDAAqDC,MAAM,MACtFe,EAAUZ,UAAY,6SAItBV,EAAaQ,YAAYc,GACzBA,EAAUC,iBAAiB,SAAS,KAChClC,KAAKmC,WAAWxB,EAAce,EAAoB,GAE1D,CACuB1B,KAAKoC,eACbjB,YAAYR,GAE3B0B,YAAW,IAAMrC,KAAKmC,WAAWxB,EAAce,IAAsB1B,KAAKC,QAAQL,SACtF,CACA,YAAAwC,GACI,IAAIE,EAAiBxB,SAASyB,cAAc,oBAC5C,IAAKD,EAAgB,CACjBA,EAAiBxB,SAASC,cAAc,OACxC,IAAIvB,EAAW,GACf,OAAQQ,KAAKC,QAAQT,UACjB,IAAK,WACDA,EAAW,CAAC,UAAW,UACvB,MACJ,IAAK,cACDA,EAAW,CAAC,UAAW,aACvB,MACJ,IAAK,eACDA,EAAW,CAAC,YAAa,YACzB,MAIJ,QACIA,EAAW,CAAC,WAAY,UAEhC8C,EAAetB,UAAUC,IAAI,QAAS,cAAe,OAAQ,WAAY,WAAY,QAAS,YAAa,eAAgBzB,EAAU,kBAAmB,kBACxJsB,SAAS0B,KAAKrB,YAAYmB,EAC9B,CACA,OAAOA,CACX,CACA,UAAAH,CAAWxB,EAAce,GACjBA,GACAe,cAAcf,GAElBf,EAAaK,UAAU0B,OAAO1C,KAAKC,QAAQP,WAC3CiB,EAAaK,UAAUC,IAAI,WAE3BoB,YAAW,KACP1B,EAAa+B,QAAQ,GACtB,IACP,CACA,OAAAC,CAAQvC,EAAOC,GACXL,KAAKG,KAAK,CACNG,KAAMpC,EAAU0E,QAChBxC,QACAC,WAER,CACA,KAAAwC,CAAMzC,EAAOC,GACTL,KAAKG,KAAK,CACNG,KAAMpC,EAAU4E,MAChB1C,QACAC,WAER,CACA,OAAA0C,CAAQ3C,EAAOC,GACXL,KAAKG,KAAK,CACNG,KAAMpC,EAAU8E,QAChB5C,QACAC,WAER,CACA,IAAA4C,CAAK7C,EAAOC,GACRL,KAAKG,KAAK,CACNG,KAAMpC,EAAUgF,KAChB9C,QACAC,WAER,CACA,WAAAiB,CAAYjC,GAER,OAAOhB,EAAMgB,IAAU,EAC3B,CACA,oBAAAuB,CAAqBJ,EAAcF,GAC/B,MAAMK,EAAeG,SAASC,cAAc,OAE5C,OADAJ,EAAaK,UAAUC,OAAO,mGAAmGC,MAAM,KAAMZ,EAAMN,KAAKC,QAAQP,aAAcc,EAAaU,MAAM,MAC1LP,CACX,CACA,0BAAAD,CAA2BJ,GACvB,IAAIE,EAAe,GACfC,EAAqB,GACzB,OAAQH,GACJ,IAAK,UACDE,EAAe,2CACfC,EAAqB,eACrB,MACJ,IAAK,QACDD,EAAe,uCACfC,EAAqB,aACrB,MACJ,IAAK,OACDD,EAAe,yCACfC,EAAqB,cACrB,MACJ,IAAK,UACDD,EAAe,6CACfC,EAAqB,gBAG7B,MAAO,CAAED,eAAcC,qBAC3B,G","sources":["webpack://ptoast/webpack/universalModuleDefinition","webpack://ptoast/webpack/bootstrap","webpack://ptoast/./src/Enums.ts","webpack://ptoast/webpack/runtime/define property getters","webpack://ptoast/webpack/runtime/hasOwnProperty shorthand","webpack://ptoast/webpack/runtime/make namespace object","webpack://ptoast/./src/ToastManager.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// Enums for toast type and animation type\nexport var ToastType;\n(function (ToastType) {\n    ToastType[\"Success\"] = \"success\";\n    ToastType[\"Error\"] = \"error\";\n    ToastType[\"Warning\"] = \"warning\";\n    ToastType[\"Info\"] = \"info\";\n    ToastType[\"Default\"] = \"default\";\n})(ToastType || (ToastType = {}));\nexport var ToastAnimation;\n(function (ToastAnimation) {\n    ToastAnimation[\"SlideInUp\"] = \"slideInUp\";\n    ToastAnimation[\"SlideUp\"] = \"slideUp\";\n    ToastAnimation[\"SlideDown\"] = \"slideDown\";\n    ToastAnimation[\"SlideRight\"] = \"slideRight\";\n    ToastAnimation[\"SlideLeft\"] = \"slideLeft\";\n    ToastAnimation[\"FadeIn\"] = \"fadeIn\";\n    // Add more animation types as needed\n})(ToastAnimation || (ToastAnimation = {}));\nexport var ToastPosition;\n(function (ToastPosition) {\n    ToastPosition[\"TopRight\"] = \"top-right\";\n    ToastPosition[\"TopLeft\"] = \"top-left\";\n    ToastPosition[\"BottomRight\"] = \"bottom-right\";\n    ToastPosition[\"BottomLeft\"] = \"bottom-left\";\n})(ToastPosition || (ToastPosition = {}));\nexport var Icons;\n(function (Icons) {\n    Icons[\"success\"] = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" class=\\\"h-8 w-8 stroke-2\\\" viewBox=\\\"0 0 24 24\\\"  stroke=\\\"currentColor\\\" >\\n  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z\\\" />\\n</svg>\\n\";\n    Icons[\"info\"] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" class=\\\"h-8 w-8 stroke-2\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\\\" />\\n</svg>\";\n    Icons[\"warning\"] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" class=\\\"h-8 w-8 stroke-2\\\" viewBox=\\\"0 0 24 24\\\"  stroke=\\\"currentColor\\\" >\\n  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\\\" />\\n</svg>\";\n    Icons[\"error\"] = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" class=\\\"h-8 w-8 stroke-2\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\" />\\n</svg>\";\n})(Icons || (Icons = {}));\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Icons, ToastAnimation, ToastPosition, ToastType } from './Enums';\nclass ToastManager {\n    _options;\n    defaultOptions = {\n        position: ToastPosition.TopRight,\n        animation: ToastAnimation.SlideInUp,\n        duration: 5000,\n        close: true,\n        progress: true\n    };\n    constructor() {\n        this._options = { ...this.defaultOptions, ...this.options };\n    }\n    get options() {\n        return this._options;\n    }\n    set options(value) {\n        this._options = { ...this.defaultOptions, ...value };\n    }\n    withOptions(options) {\n        this.options = options;\n        return this;\n    }\n    show({ title, message, type = ToastType.Default }) {\n        const { toastClasses, progressBarClasses } = this.toastAndProgressBarClasses(type);\n        const toastElement = this.generateToastElement(toastClasses, type);\n        const iconElement = document.createElement(\"div\");\n        iconElement.classList.add(...\"inline-block pr-2 align-middle text-xl\".split(' '));\n        toastElement.appendChild(iconElement);\n        const contentElement = document.createElement(\"div\");\n        contentElement.classList.add(...\"inline-block align-middle\".split(' '));\n        toastElement.appendChild(contentElement);\n        if (type) {\n            iconElement.innerHTML = this.getSvgValue(type);\n        }\n        const titleElement = document.createElement(\"div\");\n        titleElement.classList.add(\"font-semibold\");\n        titleElement.textContent = title || \"\";\n        contentElement.appendChild(titleElement);\n        const messageElement = document.createElement(\"div\");\n        messageElement.classList.add(...\"font-light leading-6\".split(' '));\n        messageElement.textContent = message || \"\";\n        contentElement.appendChild(messageElement);\n        let progressBarInterval = null;\n        if (this.options.progress) {\n            const progressBarElement = document.createElement(\"div\");\n            progressBarElement.classList.add(...\"absolute bottom-0 left-0 h-1 w-full bg-gray-400\".split(' '), progressBarClasses);\n            toastElement.appendChild(progressBarElement);\n            // Manage the progressBar\n            let computedDuration = this.options.duration;\n            progressBarInterval = setInterval(() => {\n                computedDuration = computedDuration - 100;\n                const progressBarWidth = (100 * computedDuration) / this.options.duration;\n                progressBarElement.style.width = progressBarWidth + \"%\";\n            }, 100);\n        }\n        if (this.options.close) {\n            const closeIcon = document.createElement('span');\n            closeIcon.classList.add(...\"absolute right-2 top-2 w-4 cursor-pointer stroke-2\".split(' '));\n            closeIcon.innerHTML = ` <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" >\n                                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                    `;\n            toastElement.appendChild(closeIcon);\n            closeIcon.addEventListener('click', () => {\n                this.closeToast(toastElement, progressBarInterval);\n            });\n        }\n        const toastContainer = this.getContainer();\n        toastContainer.appendChild(toastElement);\n        // Close the toast after this.options.duration\n        setTimeout(() => this.closeToast(toastElement, progressBarInterval), this.options.duration);\n    }\n    getContainer() {\n        let toastContainer = document.querySelector(\".toast-container\");\n        if (!toastContainer) {\n            toastContainer = document.createElement(\"div\");\n            let position = [];\n            switch (this.options.position) {\n                case 'top-left':\n                    position = [\"left-10\", \"top-10\"];\n                    break;\n                case 'bottom-left':\n                    position = [\"left-10\", \"bottom-10\"];\n                    break;\n                case 'bottom-right':\n                    position = [\"bottom-10\", \"right-10\"];\n                    break;\n                case 'top-right':\n                    position = [\"right-10\", \"top-10\"];\n                    break;\n                default:\n                    position = [\"right-10\", \"top-10\"];\n            }\n            toastContainer.classList.add(\"fixed\", \"z-[10000px]\", \"flex\", \"max-w-md\", \"flex-col\", \"gap-3\", \"font-sans\", \"text-base\", ...position, \"toast-container\", \"transition-all\");\n            document.body.appendChild(toastContainer);\n        }\n        return toastContainer;\n    }\n    closeToast(toastElement, progressBarInterval) {\n        if (progressBarInterval) {\n            clearInterval(progressBarInterval);\n        }\n        toastElement.classList.remove(this.options.animation);\n        toastElement.classList.add('fadeOut');\n        // Use setTimeout with a named function for clarity\n        setTimeout(() => {\n            toastElement.remove();\n        }, 500);\n    }\n    success(title, message) {\n        this.show({\n            type: ToastType.Success,\n            title,\n            message,\n        });\n    }\n    error(title, message) {\n        this.show({\n            type: ToastType.Error,\n            title,\n            message\n        });\n    }\n    warning(title, message) {\n        this.show({\n            type: ToastType.Warning,\n            title,\n            message,\n        });\n    }\n    info(title, message) {\n        this.show({\n            type: ToastType.Info,\n            title,\n            message,\n        });\n    }\n    getSvgValue(value) {\n        // @ts-ignore\n        return Icons[value] || '';\n    }\n    generateToastElement(toastClasses, type) {\n        const toastElement = document.createElement(\"div\");\n        toastElement.classList.add(...\"relative flex translate-x-0 items-center rounded-r-md border-l-4 py-4 pl-3 pr-10 shadow-lg toast\".split(' '), type, this.options.animation, ...toastClasses.split(' '));\n        return toastElement;\n    }\n    toastAndProgressBarClasses(type) {\n        let toastClasses = \"\";\n        let progressBarClasses = \"\";\n        switch (type) {\n            case 'success':\n                toastClasses = \"border-green-600 bg-green-500 text-white\";\n                progressBarClasses = \"bg-green-600\";\n                break;\n            case 'error':\n                toastClasses = \"border-red-700 bg-red-500 text-white\";\n                progressBarClasses = \"bg-red-700\";\n                break;\n            case 'info':\n                toastClasses = \"border-blue-600 bg-blue-500 text-white\";\n                progressBarClasses = \"bg-blue-600\";\n                break;\n            case 'warning':\n                toastClasses = \"border-yellow-600 bg-yellow-500 text-white\";\n                progressBarClasses = \"bg-yellow-600\";\n                break;\n        }\n        return { toastClasses, progressBarClasses };\n    }\n}\nexport default new ToastManager();\n"],"names":["root","factory","exports","module","define","amd","a","i","self","ToastType","ToastAnimation","ToastPosition","Icons","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_options","defaultOptions","position","TopRight","animation","SlideInUp","duration","close","progress","constructor","this","options","withOptions","show","title","message","type","Default","toastClasses","progressBarClasses","toastAndProgressBarClasses","toastElement","generateToastElement","iconElement","document","createElement","classList","add","split","appendChild","contentElement","innerHTML","getSvgValue","titleElement","textContent","messageElement","progressBarInterval","progressBarElement","computedDuration","setInterval","progressBarWidth","style","width","closeIcon","addEventListener","closeToast","getContainer","setTimeout","toastContainer","querySelector","body","clearInterval","remove","success","Success","error","Error","warning","Warning","info","Info"],"sourceRoot":""}